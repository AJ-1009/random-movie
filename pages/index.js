import Head from "next/head";
import axios from "axios";
import { useEffect, useState } from "react";
import { motion, transform } from "framer-motion";
import Loader from "../components/Loader";
import MovieCard from "../components/MovieCard";
const categories = [
  "prime",
  "netflix",
  "disney",
  "hbo",
  "hulu",
  "peacock",
  "starz",
  "showtime",
  "apple",
  "mubi",
  "paramount",
];
const types = ["movie", "series"];
export default function Home() {
  const [filter, setfilter] = useState("prime");
  const [type, settype] = useState("movie");
  const [data, setdata] = useState();
  const [page, setpage] = useState(1);
  const [shownmovie, setshownmovie] = useState();
  const [shuffle, setshuffle] = useState(true);

  const [openmenu, setopenmenu] = useState(false);

  useEffect(() => {
    setshownmovie();
    if (data) {
      setpage(Math.floor(Math.random() * data?.total_pages + 1));
    } else {
      setpage(Math.floor(Math.random() * 30 + 1));
    }
    const options = {
      method: "GET",
      url: "https://streaming-availability.p.rapidapi.com/search/basic",
      params: {
        country: "us",
        service: filter,
        type: type,
        genre: "18",
        page: page,
      },
      headers: {
        "X-RapidAPI-Key": process.env.NEXT_PUBLIC_API_KEY_3,
        "X-RapidAPI-Host": "streaming-availability.p.rapidapi.com",
      },
    };
    axios
      .request(options)
      .then((response) => {
        setdata(response.data);
      })
      .catch((error) => {
        console.log(error);
      });
  }, [filter, type, shuffle]);
  useEffect(() => {
    const b = Math.floor(Math.random() * 7);
    data?.results.map((movie, index) => {
      if (index == b) {
        setshownmovie(movie);
        return;
      }
    });
  }, [data]);

  return (
    <div>
      <Head>
        <title>Welcome to Random Movies</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="navbar">
        <div className="burger" onClick={() => setopenmenu(true)}></div>
        <div className="btn">
          {types.map((item) => (
            <div
              key={item}
              onClick={() => settype(item)}
              className={`filter-movie ${item == type ? "check" : ""}`}
            >
              {item}
            </div>
          ))}{" "}
        </div>
      </div>
      {openmenu && (
        <div className="mobile-menu">
          <div className="cross-wrapper" onClick={() => setopenmenu(false)}>
            <div className="cross">
              <div className="line-1"></div>
              <div className="line-2"></div>
            </div>
          </div>
          <div className="mobile-menu-wrapper">
            {categories.map((item) => (
              <div
                key={item}
                onClick={() => {
                  setfilter(item);
                  setopenmenu(false);
                }}
                className={`filter ${item == filter ? "check" : ""}`}
              >
                {item}
              </div>
            ))}
          </div>
        </div>
      )}
      <div className="heading">
        {" "}
        Welcome to <span className="change"></span>
        <span className="line1"></span>
      </div>
      <div onClick={() => setshuffle(!shuffle)} className="shuffle">
        Shuffle {type}
      </div>
      {shownmovie && <MovieCard movie={shownmovie} type={type} />}
      {!shownmovie && <Loader />}
    </div>
  );
}
